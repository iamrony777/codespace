{
    /* Build */
    "build": {
        "args": {
            "VCS_REF": "${localEnv:VCS_REF}"
        },
        "context": ".",
        "dockerfile": "Dockerfile"
    },
    "postStartCommand": "find /workspaces/$RepositoryName/.scripts -type f -executable -exec bash {} \\;",
    "postCreateCommand": "/opt/cs50/bin/postCreateCommand",
    "customizations": {
        "vscode": {
            "extensions": [
                "/opt/cs50/extensions/cs50-0.0.1.vsix",
                "cs50.extension-uninstaller",
                "ms-python.python", /* Official Python extension */
                "ms-python.vscode-pylance", /* Fast, feature-rich language support for Python */
                "charliermarsh.ruff", /* Python linter */
                "dbaeumer.vscode-eslint", /* JS/TS linter */
                "vsls-contrib.gitdoc", /* Auto git push*/
                "PKief.material-icon-theme" /* Material icon theme */
            ],
            "settings": {
                "extension-uninstaller.uninstall": [
                    "Codeium.codeium-enterprise-updater",
                    "github.copilot",
                    "github.copilot-nightly",
                    "ms-toolsai.vscode-jupyter-cell-tags",
                    "tabnine.tabnine-vscode",
                    "ms-ceintl.vscode-language-pack-bg",
                    "ms-ceintl.vscode-language-pack-cs",
                    "ms-ceintl.vscode-language-pack-de",
                    "ms-ceintl.vscode-language-pack-es",
                    "ms-ceintl.vscode-language-pack-fr",
                    "ms-ceintl.vscode-language-pack-hu",
                    "ms-ceintl.vscode-language-pack-it",
                    "ms-ceintl.vscode-language-pack-ja",
                    "ms-ceintl.vscode-language-pack-ko",
                    "ms-ceintl.vscode-language-pack-pl",
                    "ms-ceintl.vscode-language-pack-pt-br",
                    "ms-ceintl.vscode-language-pack-ru",
                    "ms-ceintl.vscode-language-pack-zh-hans",
                    "ms-ceintl.vscode-language-pack-zh-hant",
                    "CS50.ddb50",
                    "CS50.explain50",
                    "CS50.style50"
                ],
                "C_Cpp.autocomplete": "default",
                "C_Cpp.clang_format_fallbackStyle": "{ AllowShortFunctionsOnASingleLine: Empty, BraceWrapping: { AfterCaseLabel: true, AfterControlStatement: true, AfterFunction: true, AfterStruct: true, BeforeElse: true, BeforeWhile: true }, BreakBeforeBraces: Custom, ColumnLimit: 132, IndentCaseLabels: true, IndentWidth: 4, SpaceAfterCStyleCast: true, TabWidth: 4 }", /* https://clang.llvm.org/docs/ClangFormatStyleOptions.html */
                "C_Cpp.codeFolding": "enabled",
                "C_Cpp.dimInactiveRegions": false,
                "C_Cpp.enhancedColorization": "enabled",
                "C_Cpp.errorSquiggles": "disabled",
                "breadcrumbs.enabled": false,
                "editor.autoClosingQuotes": "never",
                "editor.colorDecorators": true,
                "editor.emptySelectionClipboard": false,
                "editor.folding": true,
                "editor.foldingHighlight": true,
                "editor.hover.enabled": true,
                "editor.lightbulb.enabled": true,
                "editor.matchBrackets": "near",
                "editor.minimap.enabled": false,
                "editor.occurrencesHighlight": true,
                "editor.parameterHints.enabled": true,
                "editor.quickSuggestions": {
                    "other": "on",
                    "comments": "off",
                    "strings": "off"
                },
                "editor.cursorSmoothCaretAnimation": "on",
                "editor.renderIndentGuides": false,
                "editor.renderWhitespace": "selection",
                "editor.selectionHighlight": true,
                "editor.semanticTokenColorCustomizations": {
                    "[Default Dark+]": {
                        "enabled": true,
                        "rules": {
                            "type": "#569CD6"
                        }
                    },
                    "[Default Light+]": {
                        "enabled": true,
                        "rules": {
                            "type": "#0000FF"
                        }
                    }
                },
                "editor.fontFamily": "'JetBrains Mono', JetBrainsMono Font, monospace",
                "editor.fontLigatures": true,
                "editor.suggestOnTriggerCharacters": true,
                "extensions.ignoreRecommendations": true,
                "files.autoSave": "onFocusChange",
                "files.exclude": {
                    // "**/.*": true
                    "**/.venv": true,
                    "**/node_modules": true
                },
                "files.trimTrailingWhitespace": true,
                "files.watcherExclude": {
                    "**/.git/objects/**": true,
                    "**/.git/subtree-cache/**": true,
                    "**/node_modules/*/**": true,
                    "**/.venv/*/**": true
                },
                "git.autofetch": true,
                "git.decorations.enabled": true,
                "gitdoc.autoPull": "off",
                "gitdoc.commitValidationLevel": "none",
                "gitdoc.enabled": true,
                "gitdoc.pullOnOpen": false,
                "html.suggest.html5": true,
                "javascript.suggest.enabled": true,
                "javascript.validate.enable": true,
                "problems.decorations.enabled": true,
                "remote.otherPortsAttributes": {
                    "onAutoForward": "silent"
                },
                "scm.countBadge": "off",
                "terminal.integrated.commandsToSkipShell": [
                    "workbench.action.toggleSidebarVisibility"
                ],
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.profiles.linux": {
                    "JavaScript Debug Terminal": null,
                    "bash": {
                        "args": [
                            "--login"
                        ],
                        "path": "bash"
                    }
                },
                "terminal.integrated.sendKeybindingsToShell": true,
                "terminal.integrated.tabs.showActiveTerminal": "never",
                "terminal.integrated.persistentSessionReviveProcess": "onExit",
                "terminal.integrated.shellIntegration.enabled": true,
                "terminal.integrated.shellIntegration.decorationsEnabled": "never", /* Remove decoration for each command */
                "terminal.integrated.tabs.description": "${task}${separator}${local}", /* Remove cwdFolder from description */
                "window.autoDetectColorScheme": true,
                "workbench.editor.closeOnFileDelete": true,
                "workbench.editor.untitled.hint": "hidden",
                "workbench.enableExperiments": true,
                "workbench.iconTheme": "material-icon-theme",
                "workbench.preferredDarkColorTheme": "Default Dark+",
                "workbench.preferredLightColorTheme": "Default Light+",
                "workbench.startupEditor": "none",
                "workbench.statusBar.visible": true,
                "workbench.tips.enabled": false,
                "workbench.welcomePage.walkthroughs.openOnInstall": false,
                "java.configuration.runtimes": [
                    {
                        "name": "JavaSE-20",
                        "path": "/opt/jdk-20.0.2", /* env | grep JAVA_HOME (set in cs50/cli) */
                        "default": true
                    }
                ]
            }
        }
    },
    "features": {
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
    },
    "forwardPorts": [
        5000, /* Flask */
        5900, /* VNC server */
        6081, /* VNC client */
        8080, /* http-server */
        8082  /* phpLiteAdmin */
    ],
    "remoteEnv": {
        "CS50_GH_USER": "${localEnv:GITHUB_USER}",
        "GH_TOKEN": "${localEnv:CS50_TOKEN}",
        "LANG": "${localEnv:CS50_LANG}",
        "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
        "TZ": "${localEnv:CS50_TZ}"
    }
}